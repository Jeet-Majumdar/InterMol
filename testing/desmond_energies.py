import os
import pdb
import shutil
import intermol.unit as units
from collections import OrderedDict

def get_desmond_energy_from_file(energy_file):
    ''' 
    parses the desmond energy file
    '''
    with open(energy_file, 'r') as f:
        data = []
        types = []
        for line in f:
            if '(0.000000)' in line:
                words = line.split()
                if words[-1] == 'total':
                    continue
                types.append(words[0])
                data.append(words[-1])
    data = [float(value) * units.kilocalories_per_mole for value in data]
    e_out = OrderedDict(zip(types, data))
    return e_out

def desmond_energies(cms, cfg, despath):
    """
    Evalutes energies of DESMOND files
    Args:
        cms = cms file
        cfg = cfg file
        despath = path to DESMOND binaries

    """
    cms = os.path.abspath(cms)
    cfg = os.path.abspath(cfg)
    direc, cms_filename = os.path.split(cms)
    cwd = os.getcwd()
    name = os.path.splitext(cms_filename)[0]
    energy_file = '%s/%s.enegrp.dat' % (direc, name)
    if not despath == '':
        desmond_bin = os.path.join(despath,'desmond')
    else:
        desmond_bin = os.path.join(os.environ.get('SCHRODINGER'),'desmond')

    # first see if the file already exists
#    if os.path.exists(energy_file):
#        print '%s already exists, not running DESMOND' % energy_file
#        tot_energy = get_desmond_energy_from_file(energy_file)
#        return tot_energy, energy_file

    # use DESMOND To evaluate energy
    #    cd to directory of cms file so that files generated by desmond
    #    don't clog the working directory
    os.chdir(direc)   
    if os.path.exists('trj'):
        shutil.rmtree('trj')
    cmd = '{desmond_bin} -WAIT -P 1 -in {cms} -JOBNAME {name} -c {cfg}'.format(desmond_bin=desmond_bin, name=name, cms=cms, cfg=cfg)
    print 'Running DESMOND with command'
    print cmd
    exit = os.system(cmd)
    if exit: # exit status not 0
        print 'Failed evaluating energy of {0}'.format(cms)
        os.chdir(cwd)
        sys.exit(1)
    
    # parse desmond energy file
    os.chdir(cwd)
    tot_energy = get_desmond_energy_from_file(energy_file)
    return tot_energy, energy_file


